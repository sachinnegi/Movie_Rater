{"version":3,"sources":["Components/NavBar/NavBar.js","api.js","Components/Card/Card.js","Components/CardArray/CardArray.js","Components/Carousel/CarouselAnimation.js","Components/Home/Home.js","Components/About/About.js","Components/Community/Community.js","Components/TvShow/TvShow.js","Components/CardDetail/CardDetail.js","App.js","serviceWorker.js","index.js"],"names":["NavBar","className","style","color","to","key","movieURL","tvShowURL","img_base_url","Card","title","poster_path","id","movieDetail","getMovie","onClick","console","log","alt","src","CardArray","poster1","poster2","poster3","poster4","reqbgImg","getUrl","heading","url","useState","movies","setMovies","useEffect","window","scrollTo","a","axios","get","response","data","results","getData","map","movie","idx","name","CarouselAnimation","length","Math","floor","random","pauseOnHover","autoplay","speed","autoplaySpeed","Home","popular","topRated","now_playing","upcoming","About","Community","TvShow","imgurl","setImgurl","container_style","backgroundImage","backdrop_path","backgroundSize","backgroundPosition","bakcgroundRepeat","backgroundAttachment","height","marginRight","trending","latest","CardDetail","first_air_date","release_date","popularity","overview","App","setMovie","width","lineHeight","borderRadius","backgroundColor","textAlign","fontSize","VerticalAlignTopOutlined","exact","path","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.2c884a65.chunk.js","sourcesContent":["import React from 'react'\nimport {Link} from 'react-router-dom';\nimport './NavBar.css'\n\nfunction NavBar() {\n    return (\n        <nav className = 'nav__bar'>\n            <div style={{color:'white'}} className=\"logo\">\n                MOVIE RATER\n            </div>\n            <ul className='right__items'>\n                <li><Link to=\"/\" className = 'text__link'> Home </Link></li>\n                <li><Link to=\"/tvshows\" className = 'text__link'> TV Shows </Link></li>\n                <li><Link to=\"/community\"className = 'text__link'> Community </Link></li>\n                <li><Link to=\"/about\"className = 'text__link'> About </Link></li>\n            </ul>\n        </nav>\n        \n    )\n\n}\n\nexport default NavBar\n","import axios from 'axios';\n\nconst key = \"c84671ee69c26dcf112bd21220af8a32\";\n\n\nconst movieURL = {\n    \"upcoming\" : `https://api.themoviedb.org/3/movie/upcoming?api_key=${key}&language=en-US&page=1`,\n    \"now_playing\": `https://api.themoviedb.org/3/movie/now_playing?api_key=${key}&language=en-US&page=1`,\n    \"popular\": `https://api.themoviedb.org/3/movie/popular?api_key=${key}&language=en-US&page=1`,\n    \"topRated\": `https://api.themoviedb.org/3/movie/top_rated?api_key=${key}&language=en-US&page=1`,\n}\n\nconst tvShowURL = {\n    \"latest\": `https://api.themoviedb.org/3/tv/airing_today?api_key=${key}&language=en-US&page=1`,\n    \"popular\": `https://api.themoviedb.org/3/tv/popular?api_key=${key}&language=en-US&page=1`,\n    \"topRated\": `https://api.themoviedb.org/3/tv/top_rated?api_key=${key}&language=en-US&page=1`,\n    \"trending\": `https://api.themoviedb.org/3/trending/tv/week?api_key=${key}`,\n\n}\n\nconst img_base_url = \"http://image.tmdb.org/t/p/w342\"\nexport {movieURL, tvShowURL,img_base_url,key}\n\nconst url  = movieURL.latest;\nfunction check(){\n    axios.get(url)\n        .then((response) => console.log(response))\n}\n// check();\n\n\n\n\n","import React from 'react'\nimport {img_base_url} from '../../api';\nimport './Card.css'\nimport {Link} from 'react-router-dom';\n\nfunction Card({title, id, poster_path,movieDetail,getMovie}) {\n\n\n    return (\n        <Link  to=\"/carddetail\" \n            onClick = {()=>{\n                \n                console.log('hi there')\n                getMovie(movieDetail)\n            }}>\n            <div className='card'>\n                <img className = \"poster\" alt={title} src={`${img_base_url}${poster_path}`}/>\n                <h2 className=\"poster__title\">{title}</h2>\n            </div>\n        </Link>\n    )\n}\n\nexport default Card\n","import React, {useState, useEffect} from 'react';\nimport Card from '../Card/Card';\nimport './CardArray.css'\nimport axios from 'axios';\n\nfunction CardArray({reqbgImg,getUrl,heading,url,getMovie}) {\n    const [movies, setMovies] = useState([]);\n\n    useEffect(() => {\n        window.scrollTo(0,0);\n        const getData = async(url) =>{\n            try{\n                const response  = await axios.get(url);\n                setMovies(response.data.results)\n                if (reqbgImg){\n                    getUrl(response.data.results[0])\n                }\n                // console.log(response.data.results)\n                return response;\n            } catch(error) {\n                console.log(error, \"somethings not right\");\n            }\n        }\n        getData(url);\n    },[url])\n    \n    return (\n        <div className = \"row\">\n\n            <h1 className='heading'>{heading}</h1>\n            <div className = \"cards__container\">\n                {movies.map( (movie,idx)=>(\n                    <Card\n                        key = {movie.id}\n                        title = {movie.title || movie.name}\n                        id = {movie.id}\n                        poster_path = {movie.poster_path}\n                        movieDetail =  {movie}\n                        getMovie = {getMovie}\n                    />\n                ))} \n            </div>\n        </div>\n       \n    )\n}\n\nexport default CardArray\n","import React, {useState, useEffect} from 'react'\nimport { Carousel } from 'antd';\nimport './Carousel.css';\nimport {key,img_base_url} from '../../api';\nimport axios from 'axios';\n\nconst url = `https://api.themoviedb.org/3/trending/movie/week?api_key=${key}`;\nvar poster1,poster2,poster3, poster4;\nfunction CarouselAnimation() {\n   \n    const [movies, setMovies] = useState([]);\n\n    \n    useEffect(() => {\n        window.scrollTo(0,0);\n        const getData = async(url) =>{\n            try{\n                const response  = await axios.get(url);\n                setMovies(response.data.results)\n                return response;\n            } catch(error) {\n                console.log(error, \"somethings not right\");\n            }\n        }\n        getData(url);\n    },[])\n    if (movies.length>0){\n        poster1 = `${img_base_url}${movies[Math.floor(Math.random()*8)].poster_path}`\n        poster2 = `${img_base_url}${movies[8+Math.floor(Math.random()*3)].poster_path}`\n        poster3= `${img_base_url}${movies[12+Math.floor(Math.random()*3)].poster_path}`\n        poster4 = `${img_base_url}${movies[16+Math.floor(Math.random()*3)].poster_path}`\n    }\n    // console.log(poster);\n    \n    \n    return (\n        <div >\n            \n            <Carousel pauseOnHover ={false} autoplay speed= {1000} autoplaySpeed = {2400} className= 'car'>\n                <div className = \"indiv\">\n                    <img alt=\"poster\" className='image' src= {poster1}/>\n                </div>\n                <div className = \"indiv\">\n                    <img alt=\"poster\" className='image' src= {poster2}/>\n                </div>\n                <div className = \"indiv\">\n                    <img alt=\"poster\" className='image' src= {poster3}/>\n                </div>\n                <div className = \"indiv\">\n                    <img alt=\"poster\" className='image' src= {poster4}/>\n                </div>\n            </Carousel>\n               \n        </div>\n        \n    )\n}\n\nexport default CarouselAnimation\n","import React from 'react'\nimport {movieURL} from '../../api';\nimport CardArray from '../CardArray/CardArray';\nimport CarouselAnimation from '../Carousel/CarouselAnimation'\nimport './Home.css'\nfunction Home({getMovie}) {\n    return (\n        <div className=\"homepage\">\n            <CarouselAnimation/>\n            <CardArray heading = {\"Popular Movies\"} url={movieURL.popular} getMovie = {getMovie} />\n            <CardArray heading = {\"Top Rated Movies\"} url={movieURL.topRated} getMovie = {getMovie} />\n            <CardArray heading = {\"Now Playing\"} url={movieURL.now_playing} getMovie = {getMovie} />\n            <CardArray heading = {\"Upcoming Movies\"} url={movieURL.upcoming} getMovie = {getMovie} />\n        </div>\n    )\n}\n\nexport default Home\n","import React from 'react'\n\nfunction About() {\n    return (\n        <div>\n            <h1>CSS3 Patterns Gallery</h1>\n        </div>\n    )\n}\n\nexport default About\n","import React from 'react'\nimport './Community.css'\n\nfunction Community() {\n    return (\n        <div className=\"community-container\">\n            <h1> community</h1>\n        </div>\n    )\n}\n\nexport default Community\n","import React, {useState} from 'react';\nimport {tvShowURL} from '../../api';\nimport CardArray from '../CardArray/CardArray';\nimport './TvShow.css';\n\nconst backdrop_base_url = \"http://image.tmdb.org/t/p/w1920_and_h800_multi_faces\";\n\nfunction TvShow({getMovie}) {\n    const[imgurl, setImgurl] = useState('')\n    const getUrl = (url) =>{\n        setImgurl(url)\n    }\n    // console.log(imgurl)\n    var container_style = {}\n    if (setImgurl){\n        container_style = {\n            backgroundImage: `linear-gradient(to right, rgba(0,0,0, 0.5) , rgba(0,0,0, 0.84)), url(\"${backdrop_base_url + imgurl.backdrop_path}\")`,\n            backgroundSize: 'cover',\n            backgroundPosition: 'center',\n            bakcgroundRepeat: 'no-repeat',\n            backgroundAttachment: 'fixed',\n            height: \"100vh\",\n            marginRight: '20px',    \n        }\n    }\n    return (\n        \n        <div className=\"homepage tv__show\">\n            <div style = {container_style} className=\"tvShow__backgroundcover\"></div>\n            <CardArray reqbgImg={true} getUrl = {getUrl} heading = {\"Trending\"} url={tvShowURL.trending} getMovie = {getMovie} />\n            <CardArray heading = {\"Latest\"} url={tvShowURL.latest} getMovie = {getMovie} />\n            <CardArray heading = {\"Popular\"} url={tvShowURL.popular} getMovie = {getMovie} />\n            <CardArray heading = {\"Top Rated\"} url={tvShowURL.topRated} getMovie = {getMovie} />         \n        </div>    \n    )\n}\n\nexport default TvShow\n","import React, {useEffect} from 'react';\nimport './CardDetail.css';\n\n\nconst img_base_url = \"http://image.tmdb.org/t/p/w342\";\nconst backdrop_base_url = \"http://image.tmdb.org/t/p/w1920_and_h800_multi_faces\";\n\nfunction CardDetail({movieDetail}) {\n    console.log(movieDetail)\n\n    useEffect(() => {\n        window.scrollTo(0,0)\n    },[])\n\n    if (movieDetail){\n        \n        const container_style = {\n            backgroundImage: `linear-gradient(to right, rgba(21.57%, 14.51%, 15.69%, 1.00) 150px, rgba(27.45%, 22.75%, 23.53%, 0.84) 100%), url(\"${backdrop_base_url + movieDetail.backdrop_path}\")`,\n            backgroundSize: 'cover',\n            backgroundPosition: 'center',\n            bakcgroundRepeat: 'no-repeat',    \n        }\n        \n        return (\n            <div style = {container_style} className = \"CardDetail__container\">\n                <div className=\"CardDetail__image\">\n                    <img alt=\"poster\" className=\"cardDetail__image\" src={`${img_base_url + movieDetail.poster_path}`} />\n                </div>\n                <div className=\"CardDetail__detail\">\n                    <header className=\"cardDetail__header\">\n                        <h1 className=\"CardDetail__title\">{movieDetail.title || movieDetail.name}</h1>\n                        <p className=\"date\">{movieDetail.first_air_date || movieDetail.release_date}</p>\n                        <p className=\"popularity\">Popularity {movieDetail.popularity}</p>\n                    </header>\n                    <section className=\"overview\">\n                        <p className=\"overview__header\">Overview</p>\n                        <div className=\"overview__detail\">{movieDetail.overview}</div>\n                    </section>\n                    \n                </div>\n            </div>\n        )\n    }\n    else{\n        return (\n            <h1>Loading...</h1>\n        )\n    }\n}\n\nexport default CardDetail\n","import React, {useState} from 'react';\nimport './App.css';\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\nimport NavBar from './Components/NavBar/NavBar';\nimport Home from './Components/Home/Home';\nimport About from './Components/About/About';\nimport Community from './Components/Community/Community';\nimport Tvshows from './Components/TvShow/TvShow';\nimport CardDetail from './Components/CardDetail/CardDetail';\nimport { BackTop } from 'antd';\nimport {VerticalAlignTopOutlined} from '@ant-design/icons';\n\n/* \n  header\n  card\n  cardDetail\n  Community\n  About\n  Movies/Homepage\n  Tvshows\n  Search Feature\n  Register User\n*/\n\nfunction App() {\n\n  const [movie,setMovie] = useState();\n  const getMovie = (movieDetail)=>{\n    setMovie(movieDetail);\n  }  \n  const style = {\n    height: '40px',\n    width: '40px',\n    lineHeight: '40px',\n    borderRadius: '50%',\n    backgroundColor: '#6fb3b0',\n    color: '#fff',\n    textAlign: 'center',\n    fontSize: 20,\n  };\n  \n  return (\n    <div className=\"App\">\n\n    <BackTop>\n      <div style={style}><VerticalAlignTopOutlined/></div>\n    </BackTop>\n     \n      <Router>\n        <NavBar/>\n\n        <Switch>\n          <Route exact path='/'>\n            <Home getMovie = {getMovie}/>\n          </Route>\n          <Route exact path='/tvshows'>\n            <Tvshows getMovie = {getMovie}/>\n          </Route>\n          <Route exact path=\"/carddetail\" >\n            <CardDetail movieDetail = {movie} />\n          </Route>\n          <Route exact path='/community'> \n            <Community/>\n          </Route>\n          <Route exact path='/about'> \n            <About/>\n          </Route>\n        </Switch>\n\n      </Router>\n      \n\n      \n    </div>\n    \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\nserviceWorker.unregister();\n"],"sourceRoot":""}